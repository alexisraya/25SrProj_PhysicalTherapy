THIS EXPLAINS HOW BACKEND WORKS AND WHAT FUNCTIONALITIES EACH FILE HOLDS
- Will help with imports

// -------------------------------- // T Y P E S // -------------------------------- //
INTERFACE SETUP TEMPLATES
Import example:
import type { Exercise } from "$firebase/types/exerciseType";
* ------------------------- userType.ts ------------------------- *
Interfaces:
• User
• AssignedExercise
• Program
• UserStats

* ------------------------- exerciseType.ts ------------------------- *
Interfaces:
• Exercise
• (BaseExercise)
• (DistanceExercise)
• (WeightExercise)
• (TimeExercise)


// -------------------------------- // USER-RELATED S E R V I C E S // -------------------------------- //
USER-RELATED FUNCTIONS THAT HAVE DIFFERENT PURPOSES THROUGHOUT THE APP
Import example:
import { getCurrentProgram } from "$firebase/services/programService";

* ------------------------- userService.ts ------------------------- *
Helps with initializing and updating User and their core details

Functions:
- getUser()
- getAllUsers()
- updateUser()
- createUser()

* ------------------------- programService.ts -------------------------*
Overall Program Management functionality

Functions:
- assignProgram()
- getCurrentProgram()
- updateProgram()
- isProgramCompleted()
- updateExerciseOrder()

* ------------------------- userexerciseService.ts ------------------------- *
Manages the user to exercise interactions

Functions:
- completedExercise()
- skipExercise()

* ------------------------- milestoneService.ts ------------------------- *
Handles goals and achievements for the user

Interface:
- Goal

Goal Functions:
- assignGoalsToUser()
- updateGoalLockStatus()
- getUserGoals()

Achievement Functions:
- initializeUserAchievements()
- checkAchievements()
- getUserAchievements()


* ------------------------- statService.ts ------------------------- *
Handles statistics tracking, streak management, and progress resets

Functions:
- getUserStats() - Gets a user's stats from Firestore
- updateUserStats() - Updates stats after completing an exercise (only affects relevant stat categories)
- resetDailyProgress() - Resets daily exercises at midnight without affecting weekly streak
- resetWeeklyProgress() - Processes weekly stats on Sundays (increments streak if 5+ days completed)
- checkAndResetProgress() - Ensures resets happen only once per day, manages both daily and weekly resets
- getWeeklyProgress() - Returns formatted weekly progress including days remaining and days needed for streak
- updateStreakOnCompletion() - Updates streak counter when daily program is completed
- hasCompletedToday() - Checks if user already completed their program today (prevents duplicate tracking)

HOW STREAKS WORK:
- Users need to complete exercises on 5+ days per week
- Streak counts consecutive weeks where user met this goal
- Streak resets to 0 only if user completes fewer than 5 days in a week
- Within each week, days don't need to be consecutive
- Weekly progress resets every Sunday

* ------------------------- helpers.ts ------------------------- *
(Might need cleaning or deleting) Helper functions - that might not be necessary
(They might not even be used) - don't worry about this file

Functions:
- getWeekStartDate()
- initializeUserStats()

// -------------------------------- // OTHER S E R V I C E S // -------------------------------- //
GENERAL FUNCTIONS THAT HAVE DIFFERENT PURPOSES THROUGHOUT THE APP

* ------------------------- goalService.ts ------------------------- *
Global Goal Library/Collection Management

Interface:
- Goal

Functions:
- getAllGoalsFromLibrary()
- getGoal()
- sortedGoalsByMonth --> Not async function

* ------------------------- achieveService.ts ------------------------- *
Global Achievement Library/Collection Management

Interfaces:
- BaseAchievement
- DistanceAchievement
- WeightAchievement
- TimeAchievement

export type Achievement = DistanceAchievement | WeightAchievement | TimeAchievement;

Functions:
- isDistanceAchievement()
- isWeightAchievement()
- isTimeAchievement()
- convertToAchievement() --> Switch function that determines which achievement
- getAllAchievementsFromLibrary()
- getAchievement()
- getAchievementsByType()

* ------------------------- therapistService.ts ------------------------- *
Manages the Therapist initialization (don't worry about this)

Functions:
- getTherapist()
- assignPatientToTherapist() --> Not working for some reason
- getPatientsForTherapist()


* ------------------------- exerciseService.ts ------------------------- *
Global Exercise Library/Collection Management

Functions:
- getAllExercisesFromLibrary()
- getExercise()
- getExercisesByType()
- formatExerciseRequirements()